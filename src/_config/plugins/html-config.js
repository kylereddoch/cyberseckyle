import htmlmin from 'html-minifier-terser';

const isProduction = process.env.ELEVENTY_ENV === 'production';

export const htmlConfig = (eleventyConfig) => {
  eleventyConfig.addTransform('html-minify', function (content, outputPath) {
    // Only run for built HTML in production
    if (!isProduction || !outputPath || !outputPath.endsWith('.html')) return content;

    // Optional: allow per-page opt-out with `no_minify: true` in front matter
    const page = this.page || {};
    if (page.data && page.data.no_minify) return content;

    try {
      return htmlmin.minify(content, {
        // Safe defaults that won’t mangle modern inline JS/attrs
        collapseWhitespace: true,
        removeComments: true,
        keepClosingSlash: true,

        // Common breakage point—turn off JS mangling for inline scripts and Alpine/HTMX attrs
        minifyJS: false,

        // Still fine to minify CSS
        minifyCSS: true,

        // Helps with custom elements / mixed-case tags
        caseSensitive: true,

        // If you literally print Nunjucks/shortcode braces in code snippets
        ignoreCustomFragments: [/{%[\s\S]*?%}/, /{{[\s\S]*?}}/],

        // (Optional) what you already had
        collapseBooleanAttributes: true,
        decodeEntities: true,
        includeAutoGeneratedTags: false
      });
    } catch (err) {
      console.warn(`[html-minify] skipped ${outputPath}: ${err?.message || err}`);
      return content; // don’t fail the build
    }
  });
};
